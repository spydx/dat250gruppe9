version : '3.7'

services:
   feedaapp-frontend:
      build:
         context: dat250-feedapp-gui/feedapp/
         dockerfile: Dockerfile
      healthcheck:
         test: curl --fail -s http://feedapp-api:8080/ || exit 1
         timeout: 30s
         interval: 10s
         retries: 10
      environment: 
         API_BASE_URL: http://feedapp-api:8080/api/
      ports: 
         - 80:80
      depends_on:
         - feedapp-api
      networks:
         - frontend

   feedapp-api:
      build: 
         context: dat250-feedapp-api
         dockerfile: Dockerfile
      healthcheck:
         test: curl --fail -s http://localhost:8080/ || exit 1
         timeout: 45s
         interval: 10s
         retries: 10
      ports:
         - 8080:8080
      #restart: always
      depends_on:
         feedapp-db:
            condition: service_healthy
         feedapp-messaging:
            condition: service_healthy
      environment:
         SPRING_DATASOURCE_URL: jdbc:mysql://feedapp-db:3306/feedappdb?createDatabaseIfNotExist=true
         SPRING_RABBITMQ_HOST: feedapp-messaging
         SPRING_RABBITMQ_USER: guest
         SPRING_RABBITMQ_PASSWORD: guest
      networks:
         - backend
         - frontend

   feedapp-db:
      image: mysql:latest
      healthcheck:
         test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
         timeout: 45s
         interval: 10s
         retries: 10
      ports:
         - 3306:3306
      restart: always
      environment:
         MYSQL_DATABASE: feedappdb
         MYSQL_USER: feedapp
         MYSQL_PASSWORD: feedapppassword
         MYSQL_ROOT_PASSWORD: mhnrBKex
      volumes:
         - db-data:/var/lib/mysql
      networks:
         - backend

   feedapp-messaging:
      image: rabbitmq:3-management
      healthcheck:
         test: rabbitmq-diagnostics -q ping
         timeout: 30s
         interval: 30s
         retries: 3
      ports:
         - 5672:5672
         - 15672:15672
      networks:
         - backend

   feedapp-muservice:
      build:
         context: dat250-feedapp-muservice
         dockerfile: Dockerfile
      restart: always
      environment: 
         RABBITSERVER: feedapp-messaging
         RABBITUSER: guest
         RABBITPASSWORD: guest
         MONGO_SERVER: cloud-mongodb
      depends_on:
         - feedapp-messaging
         - cloud-mongodb
      networks:
         - backend
      healthcheck:
         test: curl --fail -s http://localhost:5672/ || exit 1
         timeout: 30s
         interval: 10s
         retries: 10

   cloud-mongodb:
      image: mongo
      environment: 
         MONGO_INITDB_ROOT_USERNAME: sa
         MONGO_INITDB_ROOT_PASSWORD: supersecret
         MONGO_INITDB_DATABASE: feedapp
      ports:
         - 27017:27017
      networks:
         - backend
      volumes:
         - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

   feedapp-iotdevice:
      build:
         context: dat250-feedapp-iot/iotdevice
         dockerfile: Dockerfile
      environment: 
         API: http://feedapp-api:8080/
      depends_on:
         - feedapp-api
      ports:
         - 81:80
      networks:
         - frontend
      healthcheck:
         test: curl --fail -s http://feedapp-api:8080/api/ || exit 1
         timeout: 30s
         interval: 10s
         retries: 10

volumes:
   db-data:
   
networks:
   backend:
   frontend: 